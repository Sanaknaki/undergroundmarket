[{"/Users/alisanaknaki/Documents/code/web/underground-market/src/index.tsx":"1","/Users/alisanaknaki/Documents/code/web/underground-market/src/reportWebVitals.ts":"2","/Users/alisanaknaki/Documents/code/web/underground-market/src/App.tsx":"3","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/NavigationBar.tsx":"4","/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Credentials.js":"5","/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Hash.tsx":"6","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Main.tsx":"7","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/PlaylistListItem.tsx":"8","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfo.tsx":"9","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfoItem.tsx":"10","/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/APIController.ts":"11","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Me.tsx":"12","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Search.tsx":"13"},{"size":500,"mtime":1611983352226,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":6821,"mtime":1611989714978,"results":"17","hashOfConfig":"15"},{"size":1907,"mtime":1611989282675,"results":"18","hashOfConfig":"15"},{"size":619,"mtime":1611989595727,"results":"19","hashOfConfig":"15"},{"size":327,"mtime":1611453917563,"results":"20","hashOfConfig":"15"},{"size":5153,"mtime":1611988873980,"results":"21","hashOfConfig":"15"},{"size":1144,"mtime":1611989294842,"results":"22","hashOfConfig":"15"},{"size":5447,"mtime":1611636901745,"results":"23","hashOfConfig":"15"},{"size":814,"mtime":1611634950689,"results":"24","hashOfConfig":"15"},{"size":4410,"mtime":1611979639763,"results":"25","hashOfConfig":"15"},{"size":3436,"mtime":1611983392324,"results":"26","hashOfConfig":"15"},{"size":3517,"mtime":1611988467005,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qreh8j",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alisanaknaki/Documents/code/web/underground-market/src/index.tsx",[],["57","58"],"/Users/alisanaknaki/Documents/code/web/underground-market/src/reportWebVitals.ts",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/App.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/NavigationBar.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Credentials.js",[],["59","60"],"/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Hash.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Main.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/PlaylistListItem.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfo.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfoItem.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/APIController.ts",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Me.tsx",["61"],"import React, { useState, useEffect } from \"react\";\n\nimport { TrackInfoItem } from \"./TrackInfoItem\";\n\nimport { Jumbotron, Col, Row, ListGroup, Container } from \"react-bootstrap\";\n\ninterface MeProps {\n    playlist: any[],\n    playlistID: string\n}\n\nexport const Me: React.FC<MeProps> = ({playlist, playlistID}) => {\n    \n    useEffect(() => {\n        if(playlistID !== \"-1\") {\n            renderStats();\n        }\n    }, [playlistID]);\n\n    const [stats, setStats] = useState({\n        undergroundStatus: \"\",\n        numTracks: 0,\n        avgPopularity: 0,\n        numArtists: 0,\n    });\n\n    const [doneFetching = false, toggleDoneFetching] = useState(Boolean);\n\n    function renderStats() {        \n        let numTracks = 0;\n        let totalPopularity = 0;\n        let numArtists = new Set();\n\n        for(let item of playlist) {\n            numTracks++;\n            totalPopularity += item.track.popularity;\n            if(!numArtists.has(item.track.artists[0].name)) {\n                numArtists.add(item.track.artists[0].name); \n            }\n        }\n\n        let avgPopularity = Math.floor(totalPopularity / numTracks)\n\n        setStats({\n            undergroundStatus: (avgPopularity > 80) ? \"BAD\" : (avgPopularity > 45) ? \"AVERAGE\" : \"GREAT\",\n            numTracks,\n            avgPopularity: avgPopularity,\n            numArtists: numArtists.size\n        });\n\n        toggleDoneFetching(true);\n    }\n\n    if(!doneFetching) {\n        return (\n            <header className=\"track-view lightgray thicc\">\n                <i className=\"fas fa-spinner fa-spin fa-7x\" /><span style={{marginLeft: \"30px\", fontSize: \"30px\"}}>Getting some info...</span>\n            </header>\n        );\n    } else { \n        return (\n            <header className=\"App-header\">\n                <Jumbotron className='text-left' style={{fontSize: `calc(10px + 2vmin)`, width: \"100%\", backgroundColor: \"transparent\", paddingLeft: \"0px\"}}>\n                    <Row>\n                        <Col md={1} />\n                        <Col className=\"text-left\" md={11}>\n                            <span className=\"bold\"><span className=\"gray\">Here's some <span className=\"blue\">insight</span> on your playlist. </span></span>\n                        </Col>\n                    </Row>\n                </Jumbotron>\n                \n                <Container>\n                    <Row>\n                        <Col md={12} style={{marginBottom: \"50px\"}}>\n                            <Row>\n                                <Col className=\"text-left\" md={{span: 6, offset: 3}}>\n                                    <span className=\"bold gray\" style={{fontSize: \"16px\"}}>Insight</span>\n                                    <ListGroup className=\"boxShadow\">\n                                        <TrackInfoItem label=\"Underground Status\" value={stats.undergroundStatus}/>\n                                        <TrackInfoItem label=\"Average Popularity\" value={stats.avgPopularity ? stats.avgPopularity : \"0\"}/>\n                                        <TrackInfoItem label=\"# Tracks\" value={stats.numTracks}/>\n                                        <TrackInfoItem label=\"# Artists\" value={stats.numArtists}/>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </header>\n        );\n        }\n}","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Search.tsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":18,"column":8,"nodeType":"68","endLine":18,"endColumn":20,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderStats'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [playlistID, renderStats]",{"range":"75","text":"76"},[420,432],"[playlistID, renderStats]"]