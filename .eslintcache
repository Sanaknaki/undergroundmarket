[{"/Users/alisanaknaki/Documents/code/web/underground-market/src/index.tsx":"1","/Users/alisanaknaki/Documents/code/web/underground-market/src/reportWebVitals.ts":"2","/Users/alisanaknaki/Documents/code/web/underground-market/src/App.tsx":"3","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/NavigationBar.tsx":"4","/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Credentials.js":"5","/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Hash.tsx":"6","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Main.tsx":"7","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/PlaylistListItem.tsx":"8","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfo.tsx":"9","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfoItem.tsx":"10","/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/APIController.ts":"11","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Me.tsx":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":3189,"mtime":1611638321926,"results":"16","hashOfConfig":"14"},{"size":1741,"mtime":1611638446056,"results":"17","hashOfConfig":"14"},{"size":595,"mtime":1611534375436,"results":"18","hashOfConfig":"14"},{"size":327,"mtime":1611453917563,"results":"19","hashOfConfig":"14"},{"size":3958,"mtime":1611637452736,"results":"20","hashOfConfig":"14"},{"size":1134,"mtime":1611624049083,"results":"21","hashOfConfig":"14"},{"size":5447,"mtime":1611636901745,"results":"22","hashOfConfig":"14"},{"size":814,"mtime":1611634950689,"results":"23","hashOfConfig":"14"},{"size":4028,"mtime":1611635754921,"results":"24","hashOfConfig":"14"},{"size":3413,"mtime":1611638229335,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1qreh8j",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/alisanaknaki/Documents/code/web/underground-market/src/index.tsx",[],["54","55"],"/Users/alisanaknaki/Documents/code/web/underground-market/src/reportWebVitals.ts",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/App.tsx",["56"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { Main } from \"./components/Main\";\nimport { TrackInfo } from \"./components/TrackInfo\";\nimport { Me } from \"./components/Me\";\n\nimport { NavigationBar } from \"./components/NavigationBar\";\n\nimport { getCurrentUser, getCurrentUsersPlaylists, getPopularDailyPlaylist, createUndergroundMarketPlaylist, checkTokenValidity } from \"./utils/APIController\";\nimport { Credentials, authEndpoint } from \"./utils/Credentials\";\nimport hash from \"./utils/Hash\";\n\nimport './css/App.css';\n\nconst App: React.FC<{}> = () => {\n\n    const spotify = Credentials();\n\n    const [token, setToken] = useState(\"\");\n    const [user, setUser] = useState({fn: \"\", id: \"\"});\n    \n    const [undergroundPlaylist, setUnderGroundPlaylist] = useState([]);\n    const [undergroundPlaylistID, setUndergroundPlaylistID] = useState(\"\");\n\n    const [popularDailyPlaylist, setPopularDailyPlaylist] = useState([]);\n\n    useEffect(() => {\n        let _token = (localStorage.getItem(\"TOKEN\")) ? (localStorage.getItem(\"TOKEN\")) : hash.access_token;\n        if(_token) {\n            localStorage.setItem(\"TOKEN\", _token)\n            setToken(_token);\n            getCurrentUser(_token, setUser);\n            getCurrentUsersPlaylists(_token, setUnderGroundPlaylist, setUndergroundPlaylistID);\n            getPopularDailyPlaylist(_token, setPopularDailyPlaylist);\n        }\n\n        window.location.hash = \"\";\n    }, []);\n    \n    // if(localStorage.getItem(\"TOKEN\")) {\n    //     checkTokenValidity();\n    // }\n\n    return (\n    <Router>\n        <NavigationBar token={token} spotify={spotify} authEndpoint={authEndpoint}/>\n\n        {\n            token || localStorage.getItem(\"TOKEN\") ? \n                (\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Main \n                                token={token}\n                                name={user.fn} \n                                undergroundPlaylist={undergroundPlaylist}  \n                                undergroundPlaylistID={undergroundPlaylistID}\n                                popularDailyPlaylist={popularDailyPlaylist}\n\n                                createUndergroundMarketPlaylist={() => createUndergroundMarketPlaylist(token, user.id, setUnderGroundPlaylist, setUndergroundPlaylistID)}\n                            />\n                        </Route>\n\n                        <Route path={\"/track/:trackId\"}>\n                            <TrackInfo\n                                playlist={undergroundPlaylist}\n                                playlistID={undergroundPlaylistID}\n                            />\n                        </Route>\n\n                        <Route path=\"/me\">\n                            <Me \n                                playlist={undergroundPlaylist}\n                                playlistID={undergroundPlaylistID}\n                            />\n                        </Route>\n\n                    </Switch>\n                )\n            :\n                <h1>YOU ARE NOT LOGGED IN!</h1>\n        }\n\n    </Router>\n    );\n}\n\nexport default App;\n","/Users/alisanaknaki/Documents/code/web/underground-market/src/components/NavigationBar.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Credentials.js",[],["57","58"],"/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/Hash.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Main.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/PlaylistListItem.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfo.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/TrackInfoItem.tsx",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/utils/APIController.ts",[],"/Users/alisanaknaki/Documents/code/web/underground-market/src/components/Me.tsx",["59","60"],"import React, { useState, useEffect } from \"react\";\n\nimport { TrackInfoItem } from './TrackInfoItem';\n\nimport { Jumbotron, Col, Row, ListGroup, Container } from \"react-bootstrap\";\nimport { findAllByDisplayValue } from \"@testing-library/react\";\n\ninterface MeProps {\n    playlist: any[],\n    playlistID: string\n}\n\nexport const Me: React.FC<MeProps> = ({playlist, playlistID}) => {\n    \n    useEffect(() => {\n        if(playlistID !== \"-1\") {\n            renderStats();\n        }\n    }, [playlist]);\n\n    const [stats, setStats] = useState({\n        undergroundStatus: \"\",\n        numTracks: 0,\n        avgPopularity: 0,\n        numArtists: 0,\n    });\n\n    const [doneFetching = false, toggleDoneFetching] = useState(Boolean);\n\n    function renderStats() {        \n        let numTracks = 0;\n        let totalPopularity = 0;\n        let numArtists = new Set();\n\n        for(let item of playlist) {\n            numTracks++;\n            totalPopularity += item.track.popularity;\n            numArtists.add(item.track.artists[0]); \n        }\n\n        let avgPopularity = Math.floor(totalPopularity / numTracks)\n\n        setStats({\n            undergroundStatus: (avgPopularity > 80) ? \"BAD\" : (avgPopularity > 45) ? \"AVERAGE\" : \"GREAT\",\n            numTracks,\n            avgPopularity: avgPopularity,\n            numArtists: numArtists.size\n        });\n\n        toggleDoneFetching(true);\n    }\n\n    if(!doneFetching) {\n        return (\n            <header className=\"track-view lightgray thicc\">\n                <i className=\"fas fa-spinner fa-spin fa-7x\" /><span style={{marginLeft: \"30px\", fontSize: \"30px\"}}>Getting some info...</span>\n            </header>\n        );\n    } else { \n        return (\n            <header className=\"App-header\">\n                <Jumbotron className='text-left' style={{fontSize: `calc(10px + 2vmin)`, width: \"100%\", backgroundColor: \"transparent\", paddingLeft: \"0px\"}}>\n                    <Row>\n                        <Col md={1} />\n                        <Col className=\"text-left\" md={11}>\n                            <span className=\"bold\"><span className=\"gray\">Here's some <span className=\"blue\">insight</span> on your playlist. </span></span>\n                        </Col>\n                    </Row>\n                </Jumbotron>\n                \n                <Container>\n                    <Row>\n                        <Col md={12} style={{marginBottom: \"50px\"}}>\n                            <Row>\n                                <Col className=\"text-left\" md={{span: 6, offset: 3}}>\n                                    <span className=\"bold gray\" style={{fontSize: \"16px\"}}>Insight</span>\n                                    <ListGroup className=\"boxShadow\">\n                                        <TrackInfoItem label=\"Underground Status\" value={stats.undergroundStatus}/>\n                                        <TrackInfoItem label=\"Average Popularity\" value={stats.avgPopularity ? stats.avgPopularity : \"0\"}/>\n                                        <TrackInfoItem label=\"# Tracks\" value={stats.numTracks}/>\n                                        <TrackInfoItem label=\"# Artists\" value={stats.numArtists}/>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </header>\n        );\n        }\n}",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":10,"column":110,"nodeType":"67","messageId":"68","endLine":10,"endColumn":128},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"69","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":19,"column":8,"nodeType":"72","endLine":19,"endColumn":18,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'checkTokenValidity' is defined but never used.","Identifier","unusedVar","'findAllByDisplayValue' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'playlistID' and 'renderStats'. Either include them or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [playlist, playlistID, renderStats]",{"range":"79","text":"80"},[484,494],"[playlist, playlistID, renderStats]"]